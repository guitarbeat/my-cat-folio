/* Card Container - Wraps the card and admin controls */
.cardContainer {
  position: relative;
  display: flex;
  gap: var(--space-2);
  align-items: flex-start;
  width: 100%;
}

/* Admin Actions Overlay */
.adminActionsOverlay {
  position: absolute;
  top: var(--space-2);
  right: var(--space-2);
  z-index: 20;
  display: flex;
  flex-direction: column;
  gap: var(--space-1);
  opacity: 0;
  transform: translateX(clamp(0.5rem, 2vw, 0.75rem));
  transition: all var(--duration-normal) var(--ease-out);
}

.cardContainer:hover .adminActionsOverlay {
  opacity: 1;
  transform: translateX(0);
}

.actionButton {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: clamp(2.25rem, 6vw, 2.75rem);
  height: clamp(2.25rem, 6vw, 2.75rem);
  font-size: var(--text-base);
  color: var(--text-primary);
  cursor: pointer;
  background: var(--card-background);
  border: 2px solid var(--border-color);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-md);
  backdrop-filter: blur(8px);
  transition: all var(--duration-fast) var(--ease-out);
}

.actionButton:hover {
  background: var(--card-hover);
  border-color: var(--primary-300);
  box-shadow: var(--shadow-lg);
  transform: scale(1.1);
}

.actionButton:hover::after {
  position: absolute;
  bottom: 100%;
  left: 50%;
  z-index: 30;
  padding: var(--space-1) var(--space-2);
  margin-bottom: var(--space-1);
  font-size: var(--text-xs);
  color: white;
  white-space: nowrap;
  content: attr(title);
  background: var(--gray-800);
  border-radius: var(--radius-sm);
  box-shadow: var(--shadow-md);
  transform: translateX(-50%);
}

.actionButton.deleteButton {
  color: var(--error-600);
  background: var(--error-50);
  border-color: var(--error-200);
}

.actionButton.deleteButton:hover {
  color: var(--error-700);
  background: var(--error-100);
  border-color: var(--error-300);
}

/* Special styling for visibility toggle button */
.actionButton:first-child {
  color: var(--primary-600);
  background: var(--primary-50);
  border-color: var(--primary-200);
}

.actionButton:first-child:hover {
  color: var(--primary-700);
  background: var(--primary-100);
  border-color: var(--primary-300);
}

/* Hidden state styling - Enhanced for better visibility */
.hidden {
  position: relative;
  overflow: hidden;
  background: linear-gradient(135deg, var(--warning-50), var(--warning-100));
  border-color: var(--warning-400);
  opacity: 0.7;
  filter: grayscale(40%) sepia(20%);
}

.hidden::before {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  z-index: 10;
  padding: var(--space-1) var(--space-2);
  font-size: var(--text-xs);
  font-weight: 700;
  color: white;
  text-align: center;
  letter-spacing: 0.5px;
  text-shadow: 0 1px 2px rgb(0 0 0 / 30%);
  content: "ðŸ”’ HIDDEN";
  background: linear-gradient(135deg, var(--warning-400), var(--warning-600));
}

.hidden .name {
  margin-top: var(--space-4);
  color: var(--warning-700);
}

.hidden .description {
  color: var(--warning-600);
  opacity: 0.8;
}

.hidden .metadata {
  opacity: 0.8;
}

.hidden .metaItem {
  color: var(--warning-700);
  background: var(--warning-100);
  border-color: var(--warning-200);
}

.hidden .categoryTag {
  color: var(--warning-700);
  background: var(--warning-100);
  border-color: var(--warning-200);
}

.hidden .categoryMore {
  color: var(--warning-600);
  background: var(--warning-100);
  border-color: var(--warning-200);
}

/* Enhanced hover effect for hidden cards */
.hidden:hover {
  box-shadow:
    0 8px 25px rgba(var(--warning-rgb), 0.3),
    var(--shadow-lg);
  opacity: 0.9;
  filter: grayscale(20%) sepia(10%);
  transform: translateY(-2px);
}

.hidden:hover::before {
  background: linear-gradient(135deg, var(--warning-500), var(--warning-700));
}

/* Ensure card takes remaining space */
.card {
  position: relative;
  display: flex;
  flex: 1;
  flex-direction: column;
  gap: var(--space-4);
  height: auto; /* Allow height to grow with content */
  min-height: 200px; /* Increased from 140px for better description space */
  max-height: none; /* Remove max-height constraint to allow descriptions to expand */
  padding: var(--space-5);
  overflow: visible; /* Changed from hidden to allow content to expand */
  font-family: inherit;
  text-align: left;
  cursor: pointer;

  /* Reset button defaults */
  background: var(--card-background);
  border: 2px solid var(--border-color);
  border-radius: var(--radius-lg);
  border-image: linear-gradient(135deg, var(--border-color), var(--card-border))
    1;
  box-shadow: var(--shadow-sm);

  /* Enhanced visual hierarchy */
  backdrop-filter: blur(8px);
  transition: all var(--duration-normal) var(--ease-out);
  will-change: transform, box-shadow;
}

/* Background mouse follow effect */
.backgroundEffect {
  position: absolute;
  inset: 0;
  z-index: 0;
  pointer-events: none;
  border-radius: var(--radius-lg);
  mix-blend-mode: soft-light;
  transition: background 0.1s ease-out;
}

/* Enhanced content positioning */
.name,
.description,
.checkMark,
.metadata {
  position: relative;
  z-index: 1;
  transition: transform var(--duration-normal) var(--ease-out);
}

/* Name styling - Ensure it doesn't take too much space */
.name {
  flex-shrink: 0; /* Prevent name from shrinking */
  margin: 0;
  font-size: var(--text-xl);
  font-weight: 700;
  line-height: 1.2;
  color: var(--text-primary);
}

/* Description styling - Enhanced for better readability and space */
.description {
  flex: 1; /* Take remaining space */
  min-height: 4.8em; /* Ensure minimum height for description (6 lines * 1.6 line-height * 0.5em) */
  margin: 0;
  overflow: visible; /* Allow text to expand naturally */
  font-size: var(
    --text-base
  ); /* Increased from text-sm for better readability */

  font-weight: 450; /* Slightly heavier for better readability */
  line-height: 1.6;
  color: var(--text-secondary);
  opacity: 0.9; /* Increased from 0.85 for better visibility */
  transition: opacity var(--duration-normal) var(--ease-out);
}

.small .description {
  min-height: 3.2em; /* Minimum height for small cards */
  font-size: var(--text-sm);
}

/* Metadata Display - Better positioning and spacing */
.metadata {
  display: flex;
  flex-shrink: 0; /* Prevent metadata from shrinking */
  flex-direction: column;
  gap: var(--space-3);
  margin-top: auto;
}

.metaItem {
  display: flex;
  gap: var(--space-1);
  align-items: center;
  padding: var(--space-2) var(--space-3);
  font-size: var(--text-sm); /* Increased from text-xs for better readability */
  font-weight: 500;
  color: var(--text-secondary);
  background: var(--surface-color);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  transition: all var(--duration-fast) var(--ease-out);
}

.metaItem:hover {
  color: var(--text-primary);
  background: var(--surface-hover);
  border-color: var(--accent-color);
}

/* Categories Display */
.categories {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-2);
  margin-top: var(--space-2);
}

.categoryTag {
  padding: var(--space-2) var(--space-3);
  font-size: var(--text-sm); /* Increased from text-xs for better readability */
  font-weight: 500;
  color: var(--text-accent);
  background: var(--accent-color-alpha);
  border: 1px solid var(--accent-color);
  border-radius: var(--radius-sm);
  transition: all var(--duration-fast) var(--ease-out);
}

.categoryTag:hover {
  color: var(--text-on-accent);
  background: var(--accent-color);
}

.categoryMore {
  padding: var(--space-2) var(--space-3);
  font-size: var(--text-sm); /* Increased from text-xs for consistency */
  font-weight: 500;
  color: var(--text-tertiary);
  background: var(--surface-color);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
}

/* Responsive metadata for small cards */
.small .metadata {
  gap: var(--space-2);
}

.small .metaItem {
  padding: var(--space-1) var(--space-2);
  font-size: var(--text-xs);
}

.small .categories {
  gap: var(--space-1);
}

/* Enhanced hover effects for better description visibility */
.card:hover .description {
  color: var(--text-primary);
  opacity: 1;
}

/* Enhanced tilt hover effect */
.card:hover .backgroundEffect {
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    rgba(var(--primary-rgb), 0.15) 0%,
    rgba(var(--primary-rgb), 0.05) 30%,
    transparent 70%
  );
}

/* Dynamic mouse position variables */
.card {
  --mouse-x: 50%;
  --mouse-y: 50%;
}

/* Enhanced depth on hover */
.card:not(.disabled):hover .name {
  color: var(--text-primary);
  text-shadow: 0 4px 8px rgba(var(--neon-cyan-rgb), 0.4);
  transform: translateY(-2px);
}

.card:not(.disabled):hover .description {
  opacity: 1;
  transform: translateY(-1px);
}

.card:not(.disabled):hover .checkMark {
  filter: drop-shadow(0 4px 8px rgb(0 0 0 / 20%));
  transform: scale(1.1);
}

/* Smooth float animation */
.card:not(.disabled) {
  animation: float 6s ease-in-out infinite;
}

.card:not(.disabled):hover {
  animation: none;
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-5px);
  }
}

.selected {
  background: var(
    --namecard-selected-bg,
    linear-gradient(135deg, var(--primary-50), var(--primary-100))
  );
  border-color: var(--namecard-selected-border, var(--primary-500));
  box-shadow:
    0 0 0 2px rgba(var(--primary-rgb), 0.2),
    var(--shadow-lg);
  transform: translateY(-2px);
}

.selected .name {
  color: var(--text-primary);
  text-shadow: 0 0 6px rgba(var(--hot-pink-rgb), 0.4);
  transform: translateY(-1px);
}

/* * Enhanced hover effect for selected state */
.selected:hover .name {
  color: var(--text-primary);
  text-shadow: 0 0 8px rgba(var(--hot-pink-rgb), 0.6);
  transform: translateY(-2px);
}

.selected .description {
  color: var(--namecard-selected-description, var(--primary-600));
  opacity: 0.9;
}

.checkMark {
  position: absolute;
  top: var(--space-3);
  right: var(--space-3);
  font-size: var(--text-2xl);
  color: var(--hot-pink);
  opacity: 0;
  filter: drop-shadow(0 2px 4px rgba(var(--hot-pink-rgb), 0.3));
  transform: scale(0.5) rotate(-10deg);
  transition: all var(--duration-normal) var(--ease-out);
}

.selected .checkMark {
  opacity: 1;
  transform: scale(1.1) rotate(0deg);
}

.disabled {
  cursor: not-allowed;
  background: var(--card-background);
  border-color: var(--border-color);
  box-shadow: none;
  opacity: 0.6;
  filter: grayscale(30%);
  transform: none;
}

.disabled:hover {
  background: var(--card-background);
  border-color: var(--border-color);
  box-shadow: none;
  transform: none;
}

.disabled .name,
.disabled .description {
  color: var(--text-tertiary);
}

.rippleEffect {
  position: absolute;
  z-index: 1;
  pointer-events: none;
  background: radial-gradient(circle, var(--primary-300), var(--primary-200));
  border-radius: 50%;
  transform: scale(0);
  animation: ripple 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@keyframes ripple {
  0% {
    opacity: 1;
    transform: scale(0);
  }

  50% {
    opacity: 0.6;
  }

  100% {
    opacity: 0;
    transform: scale(4);
  }
}

/* Dark mode adjustments - removed in favor of global theme tokens */

/* Responsive Adjustments */
@media (width <= 768px) {
  .card {
    min-height: 140px;
    padding: var(--space-3);
    background: var(--mobile-card-background, var(--card-background));
    border-color: var(--mobile-card-border, var(--card-border));
    box-shadow: 0 2px 4px var(--shadow-color-light);
  }

  .card:hover {
    background: var(--mobile-card-hover, var(--card-hover));
    border-color: var(--primary-color);
    box-shadow: 0 4px 8px var(--shadow-color-medium);
    transform: translateY(-1px) scale(1.01);
  }

  .name {
    font-size: var(--text-lg);
    color: var(--mobile-text-primary, var(--text-primary));
  }

  .description {
    font-size: var(--text-sm);
    color: var(--mobile-text-secondary, var(--text-secondary));
  }

  .small {
    min-height: 120px;
  }

  /* Enhanced mobile touch feedback */
  .card:active {
    background: var(--mobile-card-hover, var(--card-hover));
    box-shadow: 0 1px 2px var(--shadow-color-light);
    transform: scale(0.98);
  }
}

@media (width <= 480px) {
  .card {
    min-height: 120px;
    padding: var(--space-2);
    border-radius: var(--radius-md);
  }

  .name {
    font-size: var(--text-base);
  }

  .description {
    font-size: var(--text-xs);
  }

  .checkMark {
    top: var(--space-2);
    right: var(--space-2);
  }
}

/* iPhone-specific adjustments */
@media (width <= 430px) {
  .card {
    min-height: 110px;
    padding: var(--space-2);
    background: var(--mobile-card-background, var(--card-background));
    border: 2px solid var(--mobile-card-border, var(--card-border));
  }

  .card:hover {
    border-color: var(--primary-color);
    transform: translateY(-1px);
  }

  .name {
    font-size: var(--text-sm);
    font-weight: 600;
  }

  .description {
    font-size: var(--text-xs);
    line-height: 1.4;
  }
}

/* Touch device optimizations */
@media (hover: none) and (pointer: coarse) {
  .card {
    transition:
      transform 0.1s ease,
      background-color 0.1s ease;
  }

  .card:active {
    background: var(--mobile-card-hover, var(--card-hover));
    transform: scale(0.98);
  }

  .card:hover {
    box-shadow: var(--shadow-sm);
    transform: none;
  }

  /* Enhanced touch feedback for selected state */
  .selected:active {
    background: var(--primary-100);
    border-color: var(--primary-400);
    transform: scale(0.98);
  }

  /* Dark mode adjustments - removed in favor of global theme tokens */

  /* Disable tilt on touch devices */
  .backgroundEffect {
    opacity: 0.3;
  }
}

/* High contrast mode for mobile */
@media (prefers-contrast: more) {
  @media (width <= 768px) {
    .card {
      border-color: var(--text-primary);
      border-width: 2px;
    }

    .card:hover {
      border-color: var(--primary-color);
      border-width: 3px;
    }

    .selected {
      border-color: var(--primary-color);
      border-width: 3px;
    }

    .name {
      font-weight: 700;
    }

    .description {
      opacity: 1;
    }
  }
}

/* Reduced Motion */
@media (prefers-reduced-motion: reduce) {
  .card,
  .checkMark,
  .description {
    transition: none;
  }

  .card:hover {
    transform: none;
  }

  .card:active {
    transform: none;
  }

  /* Disable tilt effects for reduced motion */
  .backgroundEffect {
    opacity: 0;
  }

  .card:not(.disabled) {
    transition: none;
  }
}

/* Card Image Container */
.cardImageContainer {
  position: relative;
  width: 100%;
  height: 150px; /* Taller to showcase the image */
  margin-bottom: var(--space-3);
  overflow: hidden;
  background: radial-gradient(
      circle at 30% 25%,
      rgb(var(--cat-image-accent-rgb, 100 116 139) / 55%) 0%,
      rgb(15 23 42 / 90%) 70%
    ),
    var(--surface-color); /* Neutral background for letterboxing */

  border-radius: var(--radius-md);
  box-shadow: 0 6px 20px rgb(15 23 42 / 35%);
  transition: box-shadow var(--duration-normal) var(--ease-out),
    transform var(--duration-normal) var(--ease-out);
}

/* Blurred background fill to avoid blank space when the image uses contain */
.cardImageContainer::before {
  position: absolute;
  inset: 0;
  z-index: 0;
  content: "";
  background-image: var(--bg-image);
  background-position: 50% var(--image-pos-y, 20%);
  background-size: cover;
  opacity: 0; /* hidden by default */
  filter: blur(18px) brightness(0.92) saturate(112%);
  transform: scale(1.08); /* prevent blur edges */
  transition: opacity var(--duration-normal) var(--ease-out);
}

.cardImageContainer::after {
  position: absolute;
  inset: 0;
  z-index: 0;
  content: "";
  background: linear-gradient(180deg, rgb(0 0 0 / 0%) 0%, rgb(0 0 0 / 6%) 100%);
  opacity: 0; /* hidden by default */
  transition: opacity var(--duration-normal) var(--ease-out);
}

.cardImage {
  position: relative;
  z-index: 1; /* above blurred bg */
  width: 100%;
  height: 100%;
  object-fit: var(--cat-image-fit, cover); /* default: fill container */
  object-position: 50% var(--image-pos-y, 20%); /* Use computed focal point */
  image-rendering: auto;
  opacity: 0;
  filter: drop-shadow(0 16px 24px rgb(15 23 42 / 35%));
  transform: scale(1.03);
  transition: transform var(--duration-normal) var(--ease-out),
    opacity 0.2s ease;
}

/* Hover/F4A: zoom out to show full cat and reveal blurred backdrop */
.hasImage:hover .cardImageContainer,
.hasImage:focus-within .cardImageContainer {
  box-shadow: 0 12px 34px rgb(15 23 42 / 50%);
  transform: translateY(-2px);
}

.cardImageContainer[data-loaded='true']::before,
.cardImageContainer[data-loaded='true']::after {
  opacity: 1;
}

.cardImageContainer[data-loaded='true'] .cardImage {
  opacity: 1;
  transform: scale(1);
}

.cardImageContainer[data-orientation='portrait'] {
  height: 240px;
}

.cardImageContainer[data-orientation='landscape'] {
  height: 180px;
}

.cardImageContainer[data-orientation='square'] {
  height: 210px;
}

.hasImage:hover .cardImage,
.hasImage:focus-within .cardImage {
  object-fit: contain;
  transform: scale(0.98);
}

.cardImage:hover {
  transform: scale(1.05);
}

/* Enhanced card styling when image is present */
.card:has(.cardImageContainer) {
  /* * Make cards taller when images are present */
  min-height: 300px;
  padding-top: var(--space-4);
}

/* * Special styling for cards with images - Tinder-style layout */
.hasImage {
  /* * Increase card height for better image display */
  min-height: 320px;
  overflow: hidden;

  /* * Enhanced Tinder-style appearance */
  border: 2px solid var(--border-color);
  border-radius: 20px;
  box-shadow: 0 10px 40px rgb(0 0 0 / 20%);
  perspective: none;

  /* * Simplified transforms when images are present */
}

.hasImage:hover {
  box-shadow: 0 15px 50px rgb(0 0 0 / 30%);

  /* * Simpler hover effect for cards with images */
  transform: translateY(-4px) scale(1.02);
}

.hasImage .backgroundEffect {
  /* * Simplified background effect for cards with images */
  opacity: 0.5;
}

/* * Ensure images are properly positioned */
.hasImage .cardImageContainer {
  position: relative;
  z-index: 1;

  /* * Match swipe card image height */
  height: 220px; /* Slightly taller to reduce perceived cropping */
  margin-bottom: var(--space-4);
}

.hasImage .name,
.hasImage .description,
.hasImage .metadata {
  position: relative;
  z-index: 2;
}

/* * Enhanced spacing for cards with images */
.hasImage .name {
  margin-top: var(--space-2);
  font-size: var(--text-xl);
  font-weight: 700;
}

.hasImage .description {
  margin-top: var(--space-3);
  line-height: 1.5;
}

/* Mobile responsive styles for card images */
@media (width <= 768px) {
  .cardImageContainer {
    height: 150px;
    margin-bottom: var(--space-2);
  }

  .hasImage .cardImageContainer {
    height: 150px;
  }

  .hasImage {
    min-height: 280px;
  }

  .card:has(.cardImageContainer) {
    min-height: 280px;
  }
}

/* * Tooltip Styles */
.tooltip {
  position: fixed;
  z-index: 1000;
  max-width: 300px;
  padding: var(--space-4);
  pointer-events: none;
  background: var(--card-background);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  opacity: 0;
  transform: translateY(10px);
  transition: all var(--duration-fast) var(--ease-out);
  animation: tooltipFadeIn var(--duration-normal) var(--ease-out) forwards;
}

@keyframes tooltipFadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.tooltipContent {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.tooltipHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-bottom: var(--space-2);
  margin-bottom: var(--space-2);
  border-bottom: 1px solid var(--border-color);
}

.tooltipName {
  margin: 0;
  font-size: var(--text-lg);
  font-weight: var(--font-semibold);
  color: var(--text-primary);
}

.tooltipRank {
  padding: var(--space-1) var(--space-2);
  font-size: var(--text-sm);
  font-weight: var(--font-medium);
  color: var(--primary-700);
  background: var(--primary-100);
  border-radius: var(--radius-md);
}

.tooltipDescription {
  margin: 0;
  font-size: var(--text-sm);
  line-height: 1.4;
  color: var(--text-secondary);
}

.tooltipStats {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-2);
  margin: var(--space-2) 0;
}

.tooltipStat {
  display: flex;
  flex-direction: column;
  gap: var(--space-1);
}

.tooltipLabel {
  font-size: var(--text-xs);
  font-weight: var(--font-medium);
  color: var(--text-tertiary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.tooltipValue {
  font-size: var(--text-sm);
  font-weight: var(--font-semibold);
  color: var(--text-primary);
}

.tooltipCategories {
  padding-top: var(--space-2);
  margin-top: var(--space-2);
  border-top: 1px solid var(--border-color);
}

.tooltipCategoriesLabel {
  display: block;
  margin-bottom: var(--space-1);
  font-size: var(--text-xs);
  font-weight: var(--font-medium);
  color: var(--text-tertiary);
}

.tooltipCategoryTags {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-1);
}

.tooltipCategoryTag {
  padding: var(--space-1) var(--space-2);
  font-size: var(--text-xs);
  font-weight: var(--font-medium);
  color: var(--primary-700);
  background: var(--primary-50);
  border-radius: var(--radius-sm);
}
