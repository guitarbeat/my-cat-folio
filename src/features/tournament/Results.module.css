.container {
  position: relative;
  z-index: var(--z-0);
  width: 100%;
  max-width: 1024px;
  padding: var(--space-4);
  margin: 0 auto;
}

.header {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  padding: var(--space-4);
  margin-bottom: var(--space-6);
}

.header h1 {
  margin: 0;
  font-size: var(--text-3xl);
  font-weight: 600;
  color: var(--text-primary);
}

.headerActions {
  display: flex;
  gap: var(--space-3);
}

.actionButton {
  display: flex;
  gap: var(--space-2);
  align-items: center;
  padding: var(--space-3) var(--space-4);
  font-size: var(--text-base);
  font-weight: 500;
  color: var(--text-primary);
  cursor: pointer;
  background: var(--glass-bg);
  border: 1px solid var(--glass-border);
  border-radius: var(--radius-lg);
  transition: all var(--duration-normal) var(--ease-out-expo);
}

.actionButton:hover {
  color: white;
  background: var(--primary-500);
  border-color: var(--primary-500);
  box-shadow: var(--shadow-md);
  transform: translateY(-1px);
}

.actionButton:active {
  box-shadow: var(--shadow-sm);
  transform: translateY(0);
}

.welcome {
  font-size: var(--text-lg);
  line-height: 1.6;
  color: var(--text-secondary);
}

.userName {
  font-weight: 600;
  color: var(--primary-500);
}

.content {
  display: grid;
  gap: var(--space-8);
}

.statsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1.5rem;
  padding: 1rem;
  margin: 2rem 0;
  background: linear-gradient(
    135deg,
    rgb(255 255 255 / 5%) 0%,
    rgb(255 255 255 / 2%) 100%
  );
  border: 1px solid rgb(255 255 255 / 10%);
  border-radius: 16px;
  backdrop-filter: blur(10px);
}

.statCard {
  /* Override any conflicting styles from Results.module.css */
  position: relative;
  min-width: 180px;
  text-align: center;
}

.statCard:hover {
  /* Let the StatsCard component handle hover effects */
}

.statCard h3 {
  /* Let the StatsCard component handle label styling */
}

.statValue {
  /* Let the StatsCard component handle value styling */
}

.actions {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-4);
  justify-content: space-between;
  width: 100%;
  margin-top: var(--space-6);
}

.actions button {
  flex: 1;
  min-width: 200px;
}

.startNewButton {
  white-space: nowrap;
}

.tip {
  max-width: 400px;
  font-size: var(--text-sm);
  line-height: 1.6;
  color: var(--text-secondary);
  text-align: center;
}

.loading {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
  align-items: center;
  justify-content: center;
  min-height: 300px;
  color: var(--text-secondary);
}

.loadingSpinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--primary-100);
  border-top-color: var(--primary-500);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.tournamentBracket {
  position: relative;
  padding: var(--space-8);
  margin: var(--space-8) 0;
  overflow-x: auto;
  background-image:
    linear-gradient(var(--surface-color), var(--surface-color)),
    radial-gradient(1200px 60px at 50% 0, rgb(0 0 0 / 6%), transparent),
    radial-gradient(1200px 60px at 50% 100%, rgb(0 0 0 / 6%), transparent);
  background-blend-mode: normal, multiply, multiply;
}

.tournamentBracket::before,
.tournamentBracket::after {
  position: sticky;
  top: 0;
  bottom: 0;
  z-index: 1;
  display: block;
  width: 28px;
  pointer-events: none;
  content: "";
}

.tournamentBracket::before {
  left: 0;
  background: linear-gradient(90deg, rgb(0 0 0 / 10%), rgb(0 0 0 / 0%));
}

.tournamentBracket::after {
  margin-left: auto;
  background: linear-gradient(270deg, rgb(0 0 0 / 10%), rgb(0 0 0 / 0%));
}

.tournamentBracket h3 {
  margin-bottom: var(--space-8);
  font-size: var(--text-2xl);
  color: var(--text-primary);
  text-align: center;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(100%);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Dark mode adjustments - removed in favor of CSS variable tokens */

/* Responsive adjustments */
@media (width <= 1024px) {
  .container {
    padding: var(--space-3);
  }

  .header {
    padding: var(--space-4);
    margin-bottom: var(--space-6);
  }

  .header h2 {
    font-size: var(--text-3xl);
  }

  .welcome {
    font-size: var(--text-base);
  }

  .content {
    gap: var(--space-6);
  }

  .statsGrid {
    gap: 1rem;
    padding: 0.75rem;
  }

  .statCard {
    flex: 1;
    min-width: 150px;
  }

  .tournamentBracket {
    padding: var(--space-4);
    margin: var(--space-4) 0;
  }

  .tournamentBracket h3 {
    margin-bottom: var(--space-4);
    font-size: var(--text-xl);
  }
}

@media (width <= 768px) {
  .container {
    padding: var(--space-2);
  }

  .header {
    padding: var(--space-3);
    margin-bottom: var(--space-4);
  }

  .header h2 {
    font-size: var(--text-2xl);
  }

  .welcome {
    font-size: var(--text-sm);
  }

  .content {
    gap: var(--space-4);
  }

  .statsGrid {
    grid-template-columns: 1fr;
    gap: 1rem;
    padding: 0.5rem;
  }

  .statCard {
    width: 100%;
    min-width: auto;
  }

  .actions {
    flex-direction: column;
    gap: var(--space-3);
    margin-top: var(--space-4);
  }

  .actions button {
    width: 100%;
  }

  .startNewButton {
    justify-content: center;
    width: 100%;
  }

  .tip {
    font-size: var(--text-xs);
  }

}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  .loadingSpinner {
    animation: none;
  }

  .startNewButton:hover {
    transform: none;
  }
}

/* Results Header */
.resultsHeader {
  padding: 2rem;
  margin-bottom: 2rem;
  background: linear-gradient(135deg, var(--primary-100), var(--primary-50));
  border: 1px solid var(--primary-200);
  border-radius: 1rem;
}

/* Results Grid */
.resultsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--space-4);
  margin-bottom: var(--space-6);
}

/* Tournament Bracket */
.bracketContainer {
  padding: var(--space-4);
  margin-bottom: var(--space-6);
  overflow-x: auto;
}

/* Actions Section */
.actionsContainer {
  display: flex;
  gap: var(--space-4);
  justify-content: center;
  margin-bottom: var(--space-6);
}

.actionButton {
  min-width: 200px;
}

@media (width <= 640px) {
  .header {
    flex-direction: column;
    gap: var(--space-4);
    padding: var(--space-3);
    text-align: center;
  }

  .headerActions {
    flex-direction: column;
    width: 100%;
  }

  .actionButton {
    justify-content: center;
    width: 100%;
  }
}
