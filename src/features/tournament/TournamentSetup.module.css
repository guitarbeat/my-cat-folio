/* Base Layout */
.container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  padding-top: var(--space-6);
  background: transparent; /* Let galaxy background show through */
}

/* Name count display */
.nameCount {
  padding: var(--space-3) 0;
  margin-bottom: var(--space-4);
  text-align: center;
}

.countAndSelect {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: var(--space-3);
}

.countText {
  font-size: var(--text-base);
  font-weight: 500;
  color: var(--text-secondary);
}

.selectAllButton {
  display: inline-flex;
  gap: var(--space-2);
  align-items: center;
  justify-content: center;
  padding: var(--space-2) var(--space-4);
  font-size: var(--text-sm);
  font-weight: 500;
  color: var(--button-text-light, white);
  cursor: pointer;
  background: var(--button-primary-bg, var(--primary-color));
  border: none;
  border-radius: var(--radius-md);
  transition: var(--transition-all);
}

.selectAllButton:hover:not(:disabled) {
  background: var(--button-primary-hover, var(--primary-dark));
  box-shadow: var(--shadow-md);
  transform: translateY(-1px);
}

.helperText {
  display: block;
  margin-top: var(--space-2);
  font-size: var(--text-sm);
  color: var(--text-accent);
  text-align: center;
}

.helpText {
  margin-top: 0.25rem;
  font-size: 0.875rem;
  font-style: italic;
  color: var(--text-secondary);
}

/* Enhanced Statistics */
.nameStats {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-4);
  justify-content: center;
  padding-top: var(--space-3);
  border-top: 1px solid var(--border-color);
}

.statItem {
  padding: var(--space-2) var(--space-3);
  font-size: var(--text-sm);
  color: var(--text-secondary);
  background: var(--surface-color);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
}

/* Enhanced Controls Section */
.controlsSection {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-4);
  padding: var(--space-4);
  margin-bottom: var(--space-4);
  background: var(--surface-color);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-lg);
}

.filterGroup {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
  min-width: 150px;
}

.filterGroup label {
  font-size: var(--text-sm);
  font-weight: 500;
  color: var(--text-primary);
}

.filterSelect {
  padding: var(--space-2);
  font-size: var(--text-sm);
  color: var(--text-primary);
  background: var(--card-background);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
  transition: border-color 0.2s ease;
}

.filterSelect:focus {
  outline: none;
  border-color: var(--accent-color);
  box-shadow: 0 0 0 2px var(--accent-color-alpha);
}

.searchInput {
  min-width: 200px;
  padding: var(--space-2);
  font-size: var(--text-sm);
  color: var(--text-primary);
  background: var(--card-background);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
  transition: border-color 0.2s ease;
}

.searchInput:focus {
  outline: none;
  border-color: var(--accent-color);
  box-shadow: 0 0 0 2px var(--accent-color-alpha);
}

.searchInput::placeholder {
  color: var(--text-tertiary);
}

/* Results Info */
.resultsInfo {
  margin-bottom: var(--space-4);
  text-align: center;
}

.resultsCount {
  padding: var(--space-2) var(--space-4);
  font-size: var(--text-sm);
  color: var(--text-secondary);
  background: var(--surface-color);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
}

/* No Results */
.noResults {
  padding: var(--space-8);
  color: var(--text-secondary);
  text-align: center;
}

.noResults p {
  margin: var(--space-2) 0;
  font-size: var(--text-lg);
}

.noResults p:first-child {
  font-size: var(--text-xl);
  font-weight: 600;
}

/* Integrated Tournament Header in Sidebar */
.tournamentHeader {
  padding-bottom: var(--space-4);
  margin-bottom: var(--space-6);
  text-align: center;
  border-bottom: 2px solid var(--border-color);
}

.tournamentTitle {
  margin: 0 0 var(--space-3) 0;
  font-size: var(--text-2xl);
  font-weight: 700;
  color: var(--text-primary);
  background: linear-gradient(135deg, #94a3b8 0%, #64748b 100%);
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.tournamentSubtitle {
  margin: 0;
  font-size: var(--text-sm);
  line-height: 1.5;
  color: var(--text-secondary);
}

.progressSection {
  padding-bottom: var(--space-4);
  margin-bottom: var(--space-6);
  border-bottom: 1px solid var(--border-color);
}

.progressBar {
  width: 100%;
  height: 6px;
  margin-bottom: var(--space-2);
  overflow: hidden;
  background: var(--border-color);
  border-radius: var(--radius-full);
}

.progressFill {
  height: 100%;
  background: linear-gradient(90deg, #94a3b8, #64748b);
  border-radius: var(--radius-full);
  transition: width 0.3s ease-out;
}

.progressText {
  display: block;
  font-size: var(--text-xs);
  font-weight: 500;
  color: var(--text-secondary);
  text-align: center;
}

.starsSection {
  padding: var(--space-4);
  margin-bottom: var(--space-4);
  background: var(--card-background);
  border: 1px solid var(--card-border);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
}

.starsTitle {
  margin: 0 0 var(--space-2) 0;
  font-size: var(--text-lg);
  font-weight: 600;
  color: var(--text-primary);
}

.starsDescription {
  margin: 0 0 var(--space-4) 0;
  font-size: var(--text-sm);
  line-height: 1.5;
  color: var(--text-secondary);
}

/* Main Content Layout */
.mainContent {
  display: grid;
  grid-template-columns: 1fr 350px;
  gap: var(--space-6);
  padding: var(--space-6);
  flex: 1;
  height: 100%;
  overflow: auto;
}

/* Selection Panel */
.selectionPanel {
  display: flex;
  flex-direction: column;
  overflow: hidden;
  background: var(--card-background);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-lg);
  height: 100%;
}

.panelHeader {
  padding: var(--space-6);
  background: linear-gradient(
    135deg,
    var(--surface-color) 0%,
    var(--card-background) 100%
  );
  border-bottom: 1px solid var(--border-color);
}

/* Combined header layout */
.headerRow {
  display: flex;
  flex-wrap: wrap; /* * Allow wrapping on small screens */
  gap: var(--space-3); /* * Add gap between wrapped items */
  align-items: flex-start;
  justify-content: space-between;
  margin-bottom: var(--space-4);
}

.headerContent {
  flex: 1;
}

.headerContent .panelTitle {
  margin-bottom: var(--space-2);
}

.headerContent .panelSubtitle {
  margin: 0;
}

.headerActions {
  display: flex;
  flex-wrap: wrap; /* * Allow wrapping on very small screens */
  gap: var(--space-3);
  align-items: center;
  height: auto; /* * Allow height to grow as needed */
  min-height: 50px; /* * Ensure minimum height to accommodate button */
}

.panelTitle {
  margin: 0 0 var(--space-2) 0;
  font-size: var(--text-2xl);
  font-weight: 700;
  color: var(--text-primary);
}

.panelSubtitle {
  margin: 0;
  font-size: var(--text-base);
  line-height: 1.5;
  color: var(--text-secondary);
}

.selectionControls {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--space-4) var(--space-6);
  background: var(--surface-color);
  border-bottom: 1px solid var(--border-color);
}

.selectAllButton {
  display: inline-flex;
  gap: var(--space-2);
  align-items: center;
  justify-content: center;
  min-width: fit-content;
  padding: var(--space-3) var(--space-4);
  font-size: var(--text-sm);
  font-weight: 500;
  color: var(--button-text-light, white);
  white-space: nowrap;
  cursor: pointer;
  background: var(--button-secondary-bg, #2a2a2a);
  border: 1px solid #444;
  border-radius: var(--radius-md);
  transition: var(--transition-all);
}

.selectAllButton:hover:not(:disabled) {
  background: var(--button-secondary-hover, #333);
  border-color: var(--border-color);
  box-shadow: var(--shadow-md);
  transform: translateY(-1px);
}

/* * Ensure adequate contrast in light theme for Select All button */
:global(:root[data-theme="light"]) .selectAllButton {
  color: #fff;
  background: #1f2937; /* slate-800 */
  border-color: #0f172a; /* slate-900 */
}

:global(:root[data-theme="light"]) .selectAllButton:hover:not(:disabled) {
  background: #111827; /* slate-900 */
  border-color: #0b1220;
}

/* * Accessible focus style with high-contrast ring */
.selectAllButton:focus-visible {
  outline: 3px solid #111827;
  outline-offset: 2px;
}

.selectionStats {
  display: flex;
  gap: var(--space-1);
  align-items: baseline;
}

.selectedCount {
  font-size: var(--text-2xl);
  font-weight: 700;
  color: var(--primary-color);
}

.selectedLabel {
  font-size: var(--text-sm);
  font-weight: 500;
  color: var(--text-secondary);
}

.startSection {
  position: relative;
  padding: var(--space-6);
  overflow: hidden;
  text-align: center;
  background: linear-gradient(
    135deg,
    var(--start-section-bg-start, var(--primary-50)) 0%,
    var(--start-section-bg-end, var(--primary-100)) 100%
  );
  border-top: 1px solid var(--start-section-border, var(--primary-200));
}

/* * Add subtle pattern overlay for visual interest */
.startSection::before {
  position: absolute;
  inset: 0;
  pointer-events: none;
  content: "";
  background-image:
    radial-gradient(
      circle at 20% 80%,
      var(--start-section-pattern, transparent) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 80% 20%,
      var(--start-section-pattern, transparent) 0%,
      transparent 50%
    );
  opacity: 0.1;
}

/* * Ensure text has proper contrast in start section */
.startSection * {
  position: relative;
  z-index: 1;
}

/* * Add subtle glow effect for better visual appeal */
.startSection {
  box-shadow:
    inset 0 1px 0 var(--start-section-border, var(--primary-200)),
    0 4px 20px rgb(0 0 0 / 5%);
  transition: all var(--transition-all, 0.3s ease);
}

/* * Add hover effect for better interactivity */
.startSection:hover {
  box-shadow:
    inset 0 1px 0 var(--start-section-border, var(--primary-200)),
    0 6px 25px rgb(0 0 0 / 8%);
  transform: translateY(-1px);
}

/* Sidebar */
.sidebar {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.sidebarCard {
  display: flex;
  flex-direction: column;
  gap: var(--space-5);
}

.sidebarTitle {
  margin: 0 0 var(--space-2) 0;
  font-size: var(--text-lg);
  font-weight: 600;
  color: var(--text-primary);
}

.sidebarDescription {
  margin: 0 0 var(--space-4) 0;
  font-size: var(--text-sm);
  line-height: 1.5;
  color: var(--text-secondary);
}

/* Name Selection */
.nameSelection {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: var(--space-6);
}

.cardsContainer {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: var(--space-4);
}

/* Name Counter */
.nameCount {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-2);
  margin: var(--space-6) 0;
  text-align: center;
}

.countAndSelect {
  display: flex;
  gap: var(--space-4);
  align-items: center;
  justify-content: space-between;
}

.countText {
  font-size: var(--text-lg);
  font-weight: 600; /* Increased weight for better contrast */
  color: var(--text-primary);
  text-shadow: 0 1px 2px rgb(0 0 0 / 10%); /* Subtle shadow for better readability */
}

.selectAllButton {
  display: inline-flex;
  gap: var(--space-2);
  align-items: center;
  justify-content: center;
  padding: var(--space-3) var(--space-4);
  font-size: var(--text-base);
  font-weight: 500;
  color: var(--button-text-light, white);
  cursor: pointer;
  background: var(--button-secondary-bg, #2a2a2a);
  border: 1px solid #444;
  border-radius: var(--radius-md);
  transition: var(--transition-all);
}

.selectAllButton:hover:not(:disabled) {
  background: var(--button-secondary-hover, #333);
  border-color: var(--border-color);
}

.helperText {
  display: block;
  margin-top: var(--space-2);
  font-size: var(--text-sm);
  color: var(--primary-500);
  animation: pulse 2s infinite;
}

/* Start Button */
.startSection {
  margin: var(--space-6) 0;
  text-align: center;
}

.startButton {
  width: 100%;
  max-width: 420px;
  margin: 0 auto;
}

.startButtonHeader {
  white-space: nowrap;
}

.buttonText {
  font-size: var(--text-xl);
  font-weight: 600;
}

.buttonSubtext {
  font-size: var(--text-sm);
  opacity: 0.9;
}

/* Photo Sidebar */
.photoSidebar {
  position: sticky;
  top: var(--space-4);
}

.photoSidebarContent {
  padding: var(--space-4);
  margin-bottom: var(--space-4);
  cursor: pointer;
  background: var(--card-background);
  border: 1px solid var(--card-border);
  border-radius: var(--radius-lg);
  transition: var(--transition-all);
}

.photoSidebarContent:hover {
  background: var(--card-hover);
  border-color: var(--border-color);
  box-shadow: var(--shadow-md);
}

.photoGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  grid-auto-flow: row dense;
  gap: var(--space-3);
  align-items: stretch;
}

.photoThumbnail {
  position: relative;
  aspect-ratio: 1;
  overflow: hidden;
  cursor: pointer;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
  transition: all var(--duration-normal) var(--ease-out);
}

.photoThumbnail:hover {
  box-shadow: var(--shadow-lg);
  transform: translateY(-2px);
}

.photoThumbnail:hover .photoOverlay {
  opacity: 1;
}

.photoThumbnail img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform var(--duration-normal) var(--ease-out);
}

.photoThumbnail:hover img {
  transform: scale(1.02);
}

.photoOverlay {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(
    180deg,
    rgb(0 0 0 / 0%) 0%,
    rgb(0 0 0 / 55%) 100%
  );
  opacity: 0;
  transition: opacity var(--duration-normal) var(--ease-out);
}

.photoIcon {
  font-size: var(--text-2xl);
  color: white;
  text-shadow: 0 2px 4px rgb(0 0 0 / 50%);
}

/* Accessible button reset for thumbnails */
.photoThumbButton {
  padding: 0;
  appearance: none;
  background: transparent;
  border: none;
}

.photoThumbButton:focus-visible {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

/* Actions row below grid */
.photoActionsRow {
  display: flex;
  justify-content: center;
  margin-top: var(--space-3);
}

.photoToolbar {
  display: flex;
  gap: var(--space-3);
  align-items: center;
  justify-content: space-between;
  margin-top: var(--space-3);
}

.photoUploadRow {
  display: flex;
  gap: var(--space-2);
  align-items: center;
}

.photoUploadButton {
  display: inline-flex;
  gap: var(--space-2);
  align-items: center;
  justify-content: center;
  padding: var(--space-2) var(--space-4);
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--button-text-light, white);
  cursor: pointer;
  background: var(--button-primary-bg, var(--primary-color));
  border: none;
  border-radius: var(--radius-md);
  transition: var(--transition-all);
}

.photoUploadButton:hover {
  background: var(--button-primary-hover, var(--primary-dark));
  box-shadow: var(--shadow-sm);
}

.photoMoreButton {
  display: inline-flex;
  gap: var(--space-2);
  align-items: center;
  justify-content: center;
  padding: var(--space-2) var(--space-4);
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--text-primary);
  background: var(--surface-color);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
  transition: var(--transition-all);
}

.photoMoreButton:hover {
  background: var(--card-hover);
  box-shadow: var(--shadow-sm);
}

@media (width <= 768px) {
  .starsSection {
    padding: var(--space-3);
  }
}

/* Suggestion Section */
.suggestionSection {
  padding: var(--space-4);
  cursor: pointer;
  background: var(--card-background);
  border: 1px solid var(--card-border);
  border-radius: var(--radius-lg);
  transition: var(--transition-all);
}

.suggestionSection:hover {
  background: var(--card-hover);
  border-color: var(--border-color);
  box-shadow: var(--shadow-md);
}

.suggestionCard {
  text-align: center;
}

.suggestionIntro {
  margin: var(--space-2) 0 var(--space-4);
  color: var(--text-secondary);
}

.suggestionForm {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.formGroup {
  text-align: left;
}

.formGroup label {
  display: block;
  margin-bottom: var(--space-2);
  font-weight: 500;
}

.formGroup input,
.formGroup textarea {
  width: 100%;
  padding: var(--space-2);
  background: var(--surface-color);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
  transition: all var(--duration-normal) var(--ease-out);
}

.formGroup input:focus,
.formGroup textarea:focus {
  outline: none;
  border-color: var(--primary-400);
  box-shadow: 0 0 0 2px rgb(var(--primary-rgb) / 20%);
}

.formGroup textarea {
  min-height: 100px;
  resize: vertical;
}

.submitButton {
  display: inline-flex;
  gap: var(--space-2);
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: var(--space-3) var(--space-4);
  margin-top: var(--space-2);
  font-size: var(--text-base);
  font-weight: 500;
  color: var(--button-text-light, white);
  cursor: pointer;
  background: var(--button-primary-bg, var(--primary-color));
  border: none;
  border-radius: var(--radius-md);
  transition: var(--transition-all);
}

.submitButton:hover:not(:disabled) {
  background: var(--button-primary-hover, var(--primary-dark));
  box-shadow: var(--shadow-md);
  transform: translateY(-1px);
}

/* Image Overlay */
.overlayBackdrop {
  position: fixed;
  inset: 0;
  z-index: var(--z-modal); /* Use CSS custom property for modal backdrop */
  background: var(--overlay-dark);
  backdrop-filter: blur(8px);
}

.overlayBackdrop.minimized {
  background: transparent;
  backdrop-filter: none;
}

.overlayContent {
  position: fixed;
  inset: 0;
  z-index: var(--z-modal); /* Use CSS custom property for modal content */
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-8);
  overflow: hidden;
}

.imageWrapper {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  transition:
    width var(--duration-normal) var(--ease-out),
    height var(--duration-normal) var(--ease-out);
}

/* Dynamic positioning classes to replace inline styles */
.imageWrapperDynamic {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  transition:
    width var(--duration-normal) var(--ease-out),
    height var(--duration-normal) var(--ease-out),
    transform var(--duration-normal) var(--ease-out);
}

.imageWrapperDragging {
  cursor: grabbing;
}

.imageWrapperNotDragging {
  cursor: grab;
}

.enlargedImage {
  position: relative;
  width: 100%;
  height: 100%;
  touch-action: none;
  cursor: grab;
  user-select: none;
  object-fit: contain;
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-xl);
  transform-origin: center;
  transition: transform var(--duration-normal) var(--ease-out);
}

.resizeHandle {
  position: absolute;
  z-index: calc(
    var(--z-modal) + 3
  ); /* Use CSS custom property for resize handles */

  width: 12px;
  height: 12px;
  cursor: pointer;
  background: rgb(var(--white-rgb));
  border: 2px solid var(--primary-500);
  border-radius: var(--radius-full);
}

.resizeHandle:hover {
  background: var(--primary-500);
  transform: scale(1.2);
}

.resizeHandle.nw {
  top: -6px;
  left: -6px;
  cursor: nw-resize;
}

.resizeHandle.ne {
  top: -6px;
  right: -6px;
  cursor: ne-resize;
}

.resizeHandle.sw {
  bottom: -6px;
  left: -6px;
  cursor: sw-resize;
}

.resizeHandle.se {
  right: -6px;
  bottom: -6px;
  cursor: se-resize;
}

.enlargedImage.minimizedImage {
  max-width: 200px;
  max-height: 200px;
  cursor: default;
  box-shadow: var(--shadow-lg);
}

.imageControls {
  position: absolute;
  top: var(--space-4);
  right: var(--space-4);
  z-index: calc(
    var(--z-modal) + 2
  ); /* Use CSS custom property for image controls */

  display: flex;
  gap: var(--space-2);
}

/* Base button styles */
.minimizeButton,
.closeButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  padding: var(--space-2);
  font-size: var(--text-base);
  font-weight: 500;
  color: rgb(var(--white-rgb));
  cursor: pointer;
  background: var(--overlay-medium);
  border: none;
  border-radius: var(--radius-full);
  transition: all var(--duration-normal) var(--ease-out);
}

.minimizeButton:hover,
.closeButton:hover {
  background: var(--overlay-dark);
  transform: scale(1.1);
}

/* Specific button styles */
.minimizeButton {
  font-size: var(--text-xl);
}

.closeButton {
  font-size: var(--text-2xl);
}

.imageInstructions {
  position: absolute;
  bottom: var(--space-4);
  left: 50%;
  padding: var(--space-2) var(--space-4);
  font-size: var(--text-sm);
  color: rgb(var(--white-rgb));
  white-space: nowrap;
  background: var(--overlay-medium);
  border-radius: var(--radius-full);
  transform: translateX(-50%);
}

/* Lightbox styles */
.lightboxContent {
  position: fixed;
  inset: 0;
  z-index: calc(var(--z-modal) + 1);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-8);
}

.lightboxImageWrap {
  display: flex;
  align-items: center;
  justify-content: center;
  max-width: min(92vw, 1200px);
  max-height: 80vh;
}

.lightboxImage {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-xl);
}

.lightboxNav {
  position: absolute;
  top: 50%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 48px;
  height: 48px;
  font-size: var(--text-2xl);
  line-height: 1;
  color: rgb(var(--white-rgb));
  cursor: pointer;
  background: var(--overlay-medium);
  border: none;
  border-radius: var(--radius-full);
  transform: translateY(-50%);
  transition: var(--transition-all);
}

.lightboxNav:hover {
  background: var(--overlay-dark);
  transform: translateY(-50%) scale(1.05);
}

.lightboxNav.left {
  left: var(--space-4);
}

.lightboxNav.right {
  right: var(--space-4);
}

.lightboxClose {
  position: absolute;
  top: var(--space-4);
  right: var(--space-4);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 44px;
  height: 44px;
  font-size: var(--text-2xl);
  line-height: 1;
  color: rgb(var(--white-rgb));
  cursor: pointer;
  background: var(--overlay-medium);
  border: none;
  border-radius: var(--radius-full);
  transition: var(--transition-all);
}

.lightboxClose:hover {
  background: var(--overlay-dark);
}

.lightboxCounter {
  position: absolute;
  bottom: var(--space-4);
  left: 50%;
  padding: var(--space-1) var(--space-3);
  font-size: var(--text-sm);
  color: rgb(var(--white-rgb));
  background: var(--overlay-medium);
  border-radius: var(--radius-full);
  transform: translateX(-50%);
}

@media (width <= 768px) {
  .lightboxContent {
    padding: var(--space-4);
  }

  .lightboxImageWrap {
    max-width: min(94vw, 720px);
    max-height: 70vh;
  }

  .lightboxNav {
    width: 40px;
    height: 40px;
    font-size: var(--text-xl);
  }

  .lightboxNav.left {
    left: var(--space-3);
  }

  .lightboxNav.right {
    right: var(--space-3);
  }

  .lightboxClose {
    top: var(--space-3);
    right: var(--space-3);
    width: 38px;
    height: 38px;
    font-size: var(--text-xl);
  }

  .lightboxCounter {
    bottom: var(--space-3);
    padding: var(--space-1) var(--space-2);
    font-size: var(--text-xs);
  }
}

@media (width <= 480px) {
  .lightboxContent {
    padding: var(--space-3);
  }

  .lightboxImageWrap {
    max-height: 60vh;
  }

  .lightboxNav {
    width: 36px;
    height: 36px;
    font-size: 1.75rem;
  }

  .lightboxClose {
    width: 34px;
    height: 34px;
  }
}

/* Messages */
.errorMessage {
  margin: var(--space-2) 0;
  color: var(--error-500);
}

.successMessage {
  margin: var(--space-2) 0;
  color: var(--success-500);
}

/* Animations - pulse animation defined later in file */

/* Dark Mode - removed in favor of global theme tokens */

/* Responsive Design */
@media (width <= 1024px) {
  .mainContent {
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr;
    gap: var(--space-4);
  }

  .sidebar {
    order: -1;
  }

  .heroSection {
    padding: var(--space-6) var(--space-4);
  }

  .heroTitle {
    font-size: var(--text-3xl);
  }
}

@media (width <= 768px) {
  .mainContent {
    padding: var(--space-4);
  }

  .tournamentTitle {
    font-size: var(--text-xl);
  }

  .tournamentSubtitle {
    font-size: var(--text-xs);
  }

  .cardsContainer {
    grid-template-columns: 1fr;
    gap: var(--space-3);
  }

  .selectionControls {
    flex-direction: column;
    gap: var(--space-3);
    align-items: stretch;
  }

  .selectionStats {
    justify-content: center;
  }

  .photoGrid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: var(--space-2);
  }

  .panelHeader,
  .nameSelection,
  .startSection {
    padding: var(--space-4);
  }

  /* * Mobile optimizations for start section */
  .startSection {
    background: linear-gradient(
      135deg,
      var(--start-section-bg-start, var(--primary-100)) 0%,
      var(--start-section-bg-end, var(--primary-200)) 100%
    );
    border-top-color: var(--start-section-border, var(--primary-300));
  }

  .headerActions {
    flex-wrap: wrap; /* * Allow wrapping if needed */
    min-height: 60px; /* * Ensure adequate height for mobile */
  }

  .headerRow {
    flex-direction: column; /* * Stack content vertically on mobile */
    gap: var(--space-3); /* * Add consistent spacing */
    align-items: stretch; /* * Stretch items to full width */
  }

  .selectAllButton {
    width: 100%;
  }

  .photoGrid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .catPicturesToggleButton {
    width: 100%;
    min-height: 48px; /* * Ensure minimum touch target size */
    padding: var(--space-2) var(--space-3); /* * Optimized padding for mobile */
    margin-top: var(--space-2);
    font-size: var(--text-xs); /* * Slightly smaller text on mobile */
    border-radius: var(--radius-lg); /* * Slightly smaller radius on mobile */
  }

  .photoToolbar {
    flex-direction: column;
    gap: var(--space-2);
    align-items: stretch;
  }

  .photoUploadRow {
    justify-content: center;
    width: 100%;
  }

  .photoUploadButton,
  .photoMoreButton {
    width: 100%;
  }
}

@media (width <= 600px) {
  .photoGrid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: var(--space-2);
  }
}

@media (width <= 480px) {
  .photoGrid {
    grid-template-columns: minmax(0, 1fr);
    max-width: 360px;
    margin-inline: auto;
  }

  .photoThumbnail {
    aspect-ratio: 4 / 3;
  }

  .photoUploadRow {
    flex-wrap: wrap;
    gap: var(--space-2);
  }
}

@media (width >= 1280px) {
  .photoGrid {
    grid-template-columns: repeat(auto-fit, minmax(190px, 1fr));
    gap: var(--space-4);
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  .photoThumbnail,
  .formGroup input,
  .formGroup textarea {
    transition: none;
  }

  .helperText {
    animation: none;
  }
}

/* Fix: export tokens for compound selectors and add missing classes used by JSX */
.minimized {
  /* * Placeholder for minimized state styling */
  opacity: 0.7;
}

.minimizedImage {
  /* * Placeholder for minimized image styling */
  opacity: 0.5;
}

/* Resize handle positions */
.nw {
  top: 0;
  left: 0;
  cursor: nw-resize;
}

.ne {
  top: 0;
  right: 0;
  cursor: ne-resize;
}

.sw {
  bottom: 0;
  left: 0;
  cursor: sw-resize;
}

.se {
  right: 0;
  bottom: 0;
  cursor: se-resize;
}

/* Missing classes used by JSX */
.enlargedImage {
  width: 100%;
  height: 100%;
  user-select: none;
  object-fit: contain;
  -webkit-user-drag: none;
}

.resizeHandle {
  position: absolute;
  z-index: 10;
  width: 12px;
  height: 12px;
  background: var(--primary-500);
  border: 2px solid rgb(var(--white-rgb));
  border-radius: var(--radius-full);
}

.minimizeButton {
  position: absolute;
  top: var(--space-4);
  right: var(--space-4);
  z-index: 10;
  display: flex;
  display: inline-flex;
  gap: var(--space-2);
  align-items: center;
  justify-content: center;
  width: 40px;
  min-width: auto;
  height: 40px;
  padding: var(--space-2);
  font-size: var(--text-base);
  font-weight: 500;
  color: var(--button-text-light, white);
  cursor: pointer;
  background: var(--button-secondary-bg, #2a2a2a);
  border: 1px solid #444;
  border-radius: var(--radius-md);
  transition: var(--transition-all);
}

.minimizeButton:hover:not(:disabled) {
  background: var(--button-secondary-hover, #333);
  border-color: var(--border-color);
}

/* Missing layout hooks */
.header {
  padding: var(--space-4);
  margin-bottom: var(--space-4);
  background: var(--card-background);
  border: 1px solid var(--card-border);
  border-radius: var(--radius-lg);
  transition: var(--transition-all);
}

.namesContent {
  display: flex;
  flex-direction: column;
  gap: var(--space-6);
}

/* Header Action Buttons - Shared Styling */
.headerActionButton {
  position: relative;
  display: inline-flex;
  gap: var(--space-2);
  align-items: center;
  justify-content: center;
  min-height: 48px;
  padding: var(--space-3) var(--space-4);
  overflow: hidden;
  font-size: var(--text-sm);
  font-weight: 600;

  /* * Text styling */
  color: var(--text-primary);
  letter-spacing: 0.025em;
  white-space: nowrap;
  text-shadow: 0 1px 2px rgb(0 0 0 / 10%);
  cursor: pointer;
  user-select: none;

  /* * Glassmorphism background */
  background: var(--glass-bg);
  background-image:
    linear-gradient(var(--card-background), var(--card-background)),
    var(--gradient-primary);

  /* * Gradient border effect */
  background-clip: padding-box;
  background-origin: border-box;
  border: 2px solid transparent;
  border-radius: var(--radius-xl);

  /* * Subtle glow effect */
  box-shadow:
    0 4px 12px rgb(0 0 0 / 15%),
    0 2px 4px rgb(0 0 0 / 10%),
    inset 0 1px 0 rgb(255 255 255 / 10%);
  backdrop-filter: blur(12px);
  transition: all var(--duration-normal) var(--ease-out);
}

.headerActionButton::before {
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;

  /* * Animated background overlay */
  content: "";
  background: linear-gradient(
    90deg,
    transparent,
    rgb(255 255 255 / 10%),
    transparent
  );
  transition: left var(--duration-slow) var(--ease-out);
}

.headerActionButton:hover:not(:disabled) {
  /* * Enhanced hover state */
  background-image:
    linear-gradient(var(--card-hover), var(--card-hover)),
    var(--gradient-vibrant);
  border-color: var(--neon-cyan-100);
  box-shadow:
    0 8px 25px rgb(0 0 0 / 20%),
    0 4px 12px rgb(0 0 0 / 15%),
    var(--glow-cyan);
  transform: translateY(-2px) scale(1.02);
}

.headerActionButton:hover:not(:disabled)::before {
  left: 100%;
}

.headerActionButton:active:not(:disabled) {
  transform: translateY(-1px) scale(1.01);
  transition: transform var(--duration-fast) var(--ease-out);
}

.headerActionButtonActive {
  font-weight: 700;
  color: var(--charcoal);
  text-shadow: none;

  /* * Active state with vibrant styling */
  background-image:
    linear-gradient(var(--accent-color), var(--highlight-color)),
    var(--gradient-vibrant);
  border-color: var(--mimosa);
  box-shadow:
    0 6px 20px rgb(232 191 118 / 40%),
    0 3px 8px rgb(241 164 56 / 30%),
    var(--glow-pink);
  transform: translateY(-1px);
}

.headerActionButtonActive:hover:not(:disabled) {
  /* * Enhanced active hover state */
  background-image:
    linear-gradient(var(--highlight-color), var(--accent-color)),
    var(--gradient-vibrant);
  box-shadow:
    0 10px 30px rgb(232 191 118 / 50%),
    0 5px 15px rgb(241 164 56 / 40%),
    var(--glow-vibrant);
  transform: translateY(-3px) scale(1.03);
}

.headerActionButton:disabled {
  color: var(--text-tertiary);
  cursor: not-allowed;
  background: var(--glass-bg-light);
  box-shadow: none;

  /* * Disabled state */
  opacity: 0.5;
  transform: none;
}

.headerActionButton:focus-visible {
  /* * Focus state for accessibility */
  outline: 3px solid var(--accent-color);
  outline-offset: 3px;
  box-shadow:
    0 0 0 3px rgb(232 191 118 / 30%),
    0 4px 12px rgb(0 0 0 / 15%);
}

.swipeModeToggleButton,
.catPicturesToggleButton {
  position: relative;
}

/* Swipe Mode Container */
.swipeContainer {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  align-items: center;
  min-height: 400px;
  padding: 2rem 0;
}

/* Swipe Card Wrapper */
.swipeCardWrapper {
  position: relative;
  width: 100%;
  max-width: 400px;
  height: 300px;
  perspective: 1000px;
}

/* Swipe Card */
.swipeCard {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 2rem;
  overflow: hidden;
  touch-action: none;
  cursor: grab;
  user-select: none;
  background: var(--card-background, #0f1225);
  border: 2px solid var(--border-color, #263056);
  border-radius: 20px;
  box-shadow: 0 8px 32px rgb(0 0 0 / 30%);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Tinder-style card when cat pictures are enabled */
.swipeCard.withCatPictures {
  padding: 0;
  overflow: hidden;
  background: var(--card-background, #0f1225);
  border: 2px solid var(--border-color, #263056);
  border-radius: 20px;
  box-shadow: 0 10px 40px rgb(0 0 0 / 20%);
}

.swipeCard:active {
  cursor: grabbing;
}

/* Long Press State */
.swipeCard.longPressing {
  border: 2px solid var(--mimosa, #e8bf76);
  box-shadow: 0 8px 30px rgb(0 0 0 / 20%);
  transform: scale(1.05);
  animation: longPressPulse 0.5s ease-in-out infinite alternate;
}

@keyframes longPressPulse {
  0% {
    box-shadow: 0 8px 30px rgb(0 0 0 / 20%);
  }

  100% {
    box-shadow: 0 12px 40px rgb(232 191 118 / 40%);
  }
}

/* Basic selected state - will be enhanced below */

/* Swipe Card Content */
.swipeCardContent {
  position: relative;
  z-index: 2;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
}

/* Cat Picture Container */
.swipeCardImageContainer {
  position: relative;
  width: 100%;
  height: 220px; /* show more of the cat */
  margin-bottom: 1rem;
  overflow: hidden;
  background: linear-gradient(135deg, rgb(15 23 42 / 85%), rgb(15 23 42 / 95%));
  background:
    radial-gradient(
      circle at 30% 25%,
      rgb(var(--cat-image-accent-rgb, 100 116 139) / 60%) 0%,
      rgb(15 23 42 / 92%) 65%
    ),
    linear-gradient(135deg, rgb(15 23 42 / 85%), rgb(15 23 42 / 95%));
  border-radius: 15px;
  box-shadow: 0 8px 28px rgb(15 23 42 / 45%);
  transition:
    box-shadow var(--duration-normal) var(--ease-out),
    transform var(--duration-normal) var(--ease-out);
}

/* Blurred background fill for swipe card images */
.swipeCardImageContainer::before {
  position: absolute;
  inset: 0;
  z-index: 0;
  content: "";
  background-image: var(--bg-image);
  background-position: 50% var(--image-pos-y, 20%);
  background-size: cover;
  opacity: 0;
  filter: blur(18px) brightness(0.92) saturate(112%);
  transform: scale(1.1);
  transition: opacity var(--duration-normal) var(--ease-out);
}

.swipeCardImageContainer::after {
  position: absolute;
  inset: 0;
  z-index: 0;
  content: "";
  background: linear-gradient(
    180deg,
    rgb(15 23 42 / 5%) 0%,
    rgb(2 6 23 / 55%) 100%
  );
  opacity: 0;
  transition: opacity var(--duration-normal) var(--ease-out);
}

.swipeCardImage {
  position: relative;
  z-index: 1;
  width: 100%;
  height: 100%;
  object-fit: var(
    --cat-image-fit,
    contain
  ); /* show full cat; blurred bg fills behind */
  object-position: 50% var(--image-pos-y, 20%);
  opacity: 0;
  filter: drop-shadow(0 18px 28px rgb(15 23 42 / 45%));
  transform: scale(1.04);
  transition:
    transform 0.35s ease,
    opacity 0.25s ease;
}

.swipeCardImage:hover {
  transform: scale(1.02);
}

.swipeCardImageContainer[data-loaded="true"]::before,
.swipeCardImageContainer[data-loaded="true"]::after {
  opacity: 1;
}

.swipeCardImageContainer[data-loaded="true"] .swipeCardImage {
  opacity: 1;
  transform: scale(1);
}

.swipeCardImageContainer[data-orientation="portrait"] {
  height: 260px;
}

.swipeCardImageContainer[data-orientation="landscape"] {
  height: 210px;
}

.swipeCardImageContainer[data-orientation="square"] {
  height: 235px;
}

.swipeCardImageContainer[data-orientation="portrait"] .swipeCardImage {
  transform-origin: center 20%;
}

.swipeCardImageContainer[data-orientation="landscape"] .swipeCardImage {
  object-position: 50% var(--image-pos-y, 40%);
}

.swipeCardName {
  margin: 0 0 1rem;
  font-size: 2rem;
  font-weight: 700;
  color: var(--text-primary, #f8fafc);
  text-align: center;
  text-shadow: 0 2px 4px rgb(0 0 0 / 30%);
}

.swipeCardDescription {
  display: flex;
  flex-grow: 1;
  align-items: center;
  justify-content: center;
  margin: 0;
  font-size: 1.1rem;
  line-height: 1.6;
  color: var(--text-secondary, #cbd5e1);
  text-align: center;
}

/* Swipe Card Metadata */
.swipeCardMetadata {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  justify-content: center;
  margin-top: 1rem;
}

.metadataItem {
  padding: 0.5rem 1rem;
  font-size: 0.9rem;
  color: var(--text-primary, #f8fafc);
  background: rgb(255 255 255 / 10%);
  border-radius: 20px;
  backdrop-filter: blur(10px);
}

/* Selection Indicator */
.selectionIndicator {
  position: absolute;
  top: 1rem;
  right: 1rem;
  z-index: 10;
  padding: 0.5rem 1rem;
  font-size: 0.8rem;
  font-weight: 600;
  color: white;
  background: rgb(0 0 0 / 70%);
  border-radius: 20px;
  backdrop-filter: blur(10px);
  transition: all 0.3s ease;
}

.selectionIndicator.selected {
  background: var(--primary-color, #5a5cff);
}

/* Swipe Overlays */
.swipeOverlay {
  position: absolute;
  top: 0;
  left: 0;
  z-index: var(--z-10); /* Use CSS custom property for overlay layer */
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  font-size: 2rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 2px;
  border-radius: 20px;
  opacity: 0;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.swipeRight {
  color: white;
  background: linear-gradient(135deg, #10b981, #059669);
}

.swipeLeft {
  color: white;
  background: linear-gradient(135deg, #ef4444, #dc2626);
}

.swipeOverlay.active {
  opacity: 1;
}

.swipeText {
  text-shadow: 0 2px 4px rgb(0 0 0 / 50%);
  animation: pulse 0.6s ease-in-out;
}

@keyframes pulse {
  0%,
  100% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }
}

/* Swipe Buttons - Enhanced Modern Styling */
.swipeButtons {
  display: flex;
  gap: 2rem;
  align-items: center;
  margin-top: 1rem;
}

.swipeButton {
  position: relative;

  /* * Base button styling */
  min-width: 120px;
  min-height: 48px;
  padding: var(--space-3) var(--space-4);
  overflow: hidden;
  font-size: var(--text-sm);
  font-weight: 600;

  /* * Text styling */
  color: var(--text-primary);
  text-transform: uppercase;
  letter-spacing: 0.025em;
  text-shadow: 0 1px 2px rgb(0 0 0 / 10%);
  cursor: pointer;
  user-select: none;

  /* * Glassmorphism background */
  background: var(--glass-bg);
  background-image:
    linear-gradient(var(--card-background), var(--card-background)),
    var(--gradient-primary);

  /* * Gradient border effect */
  background-clip: padding-box;
  background-origin: border-box;
  border: 2px solid transparent;
  border-radius: var(--radius-xl);

  /* * Subtle glow effect */
  box-shadow:
    0 4px 12px rgb(0 0 0 / 15%),
    0 2px 4px rgb(0 0 0 / 10%),
    inset 0 1px 0 rgb(255 255 255 / 10%);
  backdrop-filter: blur(12px);
  transition: all var(--duration-normal) var(--ease-out);
}

.swipeButton::before {
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;

  /* * Animated background overlay */
  content: "";
  background: linear-gradient(
    90deg,
    transparent,
    rgb(255 255 255 / 10%),
    transparent
  );
  transition: left var(--duration-slow) var(--ease-out);
}

.swipeButton:hover:not(:disabled) {
  border-color: var(--neon-cyan-100);
  box-shadow:
    0 8px 25px rgb(0 0 0 / 20%),
    0 4px 12px rgb(0 0 0 / 15%),
    var(--glow-cyan);

  /* * Enhanced hover state */
  transform: translateY(-2px) scale(1.02);
}

.swipeButton:hover:not(:disabled)::before {
  left: 100%;
}

.swipeButton:active:not(:disabled) {
  transform: translateY(-1px) scale(1.01);
  transition: transform var(--duration-fast) var(--ease-out);
}

.swipeButton:disabled {
  color: var(--text-tertiary);
  cursor: not-allowed;
  background: var(--glass-bg-light);
  box-shadow: none;

  /* * Disabled state */
  opacity: 0.5;
  transform: none;
}

.swipeButton:focus-visible {
  /* * Focus state for accessibility */
  outline: 3px solid var(--accent-color);
  outline-offset: 3px;
  box-shadow:
    0 0 0 3px rgb(232 191 118 / 30%),
    0 4px 12px rgb(0 0 0 / 15%);
}

/* * Skip button (left) styling */
.swipeLeftButton {
  background-image:
    linear-gradient(var(--card-background), var(--card-background)),
    var(--gradient-danger);
  border-color: transparent;
}

.swipeLeftButton:hover:not(:disabled) {
  color: white;
  background-image:
    linear-gradient(var(--error-600), var(--error-500)), var(--gradient-danger);
  border-color: var(--error-300);
  box-shadow:
    0 8px 25px rgb(239 68 68 / 30%),
    0 4px 12px rgb(220 38 38 / 20%),
    var(--glow-red);
}

/* * Select button (right) styling */
.swipeRightButton {
  background-image:
    linear-gradient(var(--card-background), var(--card-background)),
    var(--gradient-success);
  border-color: transparent;
}

.swipeRightButton:hover:not(:disabled) {
  color: white;
  background-image:
    linear-gradient(var(--success-600), var(--success-500)),
    var(--gradient-success);
  border-color: var(--success-300);
  box-shadow:
    0 8px 25px rgb(16 185 129 / 30%),
    0 4px 12px rgb(5 150 105 / 20%),
    var(--glow-green);
}

/* Card Progress */
.cardProgress {
  padding: 0.75rem 1.5rem;
  font-size: 0.9rem;
  font-weight: 600;
  color: var(--text-primary, #f8fafc);
  background: rgb(255 255 255 / 10%);
  border: 1px solid rgb(255 255 255 / 20%);
  border-radius: 25px;
  backdrop-filter: blur(10px);
}

/* Swipe Instructions */
.swipeInstructions {
  padding: 1rem 2rem;
  font-size: 0.9rem;
  color: var(--text-secondary, #cbd5e1);
  text-align: center;
  background: rgb(255 255 255 / 5%);
  border: 1px solid rgb(255 255 255 / 10%);
  border-radius: 15px;
  backdrop-filter: blur(10px);
}

.swipeInstructions p {
  margin: 0;
}

/* Swipe Mode Instructions */
.swipeModeInstructions {
  padding: 1rem 2rem;
  margin-bottom: 2rem;
  font-size: 0.9rem;
  color: var(--text-secondary, #cbd5e1);
  text-align: center;
  background: rgb(255 255 255 / 5%);
  border: 1px solid rgb(255 255 255 / 10%);
  border-radius: 15px;
  backdrop-filter: blur(10px);
}

/* Mobile Responsiveness */
@media (width <= 768px) {
  .container {
    padding-top: var(--space-4);
  }

  .mainContent {
    grid-template-columns: 1fr;
    padding: var(--space-4);
  }

  .nameSelection {
    align-items: center;
    padding: var(--space-4);
  }

  .swipeContainer {
    gap: 1.5rem;
    padding: 1rem 0;
    margin-top: 1rem;
  }

  .swipeCardWrapper {
    max-width: 100%;
    height: 280px; /* Increased height for better mobile experience */
    margin: 0 1rem; /* Add horizontal margin */
  }

  .swipeCard {
    min-height: 280px; /* Ensure consistent height */
    padding: 1.5rem;
  }

  .swipeCardName {
    margin-bottom: 0.5rem; /* Add spacing */
    font-size: 1.5rem;
  }

  .swipeCardDescription {
    margin-bottom: 1rem; /* Add spacing */
    font-size: 1rem;
  }

  .swipeCardImageContainer {
    height: 120px;
    margin-bottom: 0.75rem;
  }

  .swipeButtons {
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    width: 100%;
    padding: 0 1rem; /* Add horizontal padding */
  }

  .swipeButton {
    min-width: 120px; /* Increased for better touch targets */
    min-height: 48px; /* Ensure minimum touch target size */
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
  }

  .cardProgress {
    padding: 0.5rem 1rem;
    font-size: 0.8rem;
  }

  .swipeModeToggleButton {
    min-height: 48px; /* Ensure minimum touch target size */
    padding: 0.75rem 1.5rem;
    font-size: 0.9rem;
  }

  /* Ensure swipe overlays are properly positioned on mobile */
  .swipeOverlay {
    font-size: 1.5rem; /* Smaller font for mobile */
    letter-spacing: 1px; /* Reduce letter spacing for mobile */
  }

  .swipeText {
    font-size: 1.2rem; /* Adjust text size for mobile */
  }
}

/* Extra small mobile devices */
@media (width <= 480px) {
  .container {
    padding-top: var(--space-3);
  }

  .headerActions {
    gap: var(--space-2); /* * Reduce gap on very small screens */
    min-height: 60px; /* * Increase minimum height for very small screens */
  }

  .headerRow {
    gap: var(--space-2); /* * Reduce gap on very small screens */
  }

  .swipeContainer {
    gap: 1rem;
    padding: 0.5rem 0;
  }

  .swipeCardWrapper {
    height: 250px;
    margin: 0 0.5rem;
  }

  .swipeCard {
    min-height: 250px;
    padding: 1rem;
  }

  .swipeCardName {
    font-size: 1.3rem;
  }

  .swipeCardDescription {
    font-size: 0.9rem;
  }

  .swipeCardImageContainer {
    height: 100px;
  }

  .swipeButtons {
    gap: 0.75rem;
    padding: 0 0.5rem;
  }

  .swipeButton {
    min-width: 100px;
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
  }

  .catPicturesToggleButton {
    max-width: 100%; /* * Ensure button doesn't overflow container */
    min-height: 44px; /* * Ensure minimum height on very small screens */
    padding: var(--space-2) var(--space-2); /* * Optimized padding for very small screens */
    overflow: hidden; /* * Hide any overflow */
    text-overflow: ellipsis; /* * Show ellipsis for very long text */
    font-size: var(--text-xs); /* * Reduce font size for better fit */
    white-space: nowrap; /* * Prevent text wrapping */
    border-radius: var(
      --radius-md
    ); /* * Smaller radius on very small screens */

    /* * Reduce effects on very small screens for performance */
    backdrop-filter: blur(8px);
  }
}

/* Touch Device Optimizations */
@media (hover: none) and (pointer: coarse) {
  .swipeCard {
    touch-action: pan-y pinch-zoom; /* Optimize touch behavior */
    cursor: default;
  }

  .swipeButton {
    min-width: 140px; /* Increased for better touch targets */
    min-height: 56px; /* Ensure minimum touch target size */
    touch-action: manipulation; /* Optimize touch behavior */
  }

  .swipeModeToggleButton {
    min-height: 56px; /* Ensure minimum touch target size */
    touch-action: manipulation; /* Optimize touch behavior */
  }

  .catPicturesToggleButton {
    min-height: 48px; /* * Ensure minimum touch target size on touch devices */
    touch-action: manipulation; /* * Optimize touch behavior */

    /* * Enhanced touch feedback */
    -webkit-tap-highlight-color: rgb(232 191 118 / 30%);

    /* * Optimize for touch interactions */
    transition:
      transform var(--duration-fast) var(--ease-out),
      box-shadow var(--duration-fast) var(--ease-out);
  }

  .catPicturesToggleButton:active {
    transform: scale(0.98); /* * Subtle press feedback */
  }

  /* Ensure swipe overlays are touch-friendly */
  .swipeOverlay {
    pointer-events: none; /* Prevent interference with touch events */
  }

  /* Optimize touch targets for mobile */
  .swipeContainer {
    touch-action: pan-y; /* Allow vertical scrolling */
  }
}

/* Additional mobile optimizations */
@media (width <= 768px) {
  /* Ensure swipe cards are properly sized for mobile */
  .swipeCardWrapper {
    touch-action: pan-y; /* Allow vertical scrolling */
  }

  /* Optimize swipe overlay positioning for mobile */
  .swipeOverlay {
    position: absolute;
    top: 0;
    left: 0;
    z-index: var(--z-10); /* Use CSS custom property for overlay layer */
    pointer-events: none; /* Prevent interference with touch events */
  }

  /* Ensure proper touch feedback */
  .swipeCard:active {
    transform: scale(0.98); /* Provide touch feedback */
  }

  .swipeButton:active {
    transform: scale(0.95); /* Provide touch feedback */
  }
}

/* Enhanced Selected Card Styling */
.swipeCard.selected {
  position: relative;
  overflow: hidden;
  background: linear-gradient(
    135deg,
    rgb(90 92 255 / 2%) 0%,
    rgb(124 58 237 / 2%) 100%
  );
  border-color: var(--primary-color, #5a5cff);
  box-shadow:
    0 8px 32px rgb(90 92 255 / 8%),
    0 0 0 2px rgb(90 92 255 / 2%),
    inset 0 0 0 1px rgb(90 92 255 / 2%);
  transform: translateY(-4px) scale(1.02);
  animation: cardSelect 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.swipeCard.selected::before {
  position: absolute;
  inset: 0;
  pointer-events: none;
  content: "";
  background: linear-gradient(
    45deg,
    transparent 30%,
    rgb(90 92 255 / 2%) 50%,
    transparent 70%
  );
  animation: shimmer 3s ease-in-out infinite;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }

  100% {
    transform: translateX(100%);
  }
}

/* Enhanced Selected Card Content */
.swipeCard.selected .swipeCardName {
  color: var(--primary-color, #5a5cff);
  text-shadow:
    0 0 8px rgb(90 92 255 / 30%),
    0 2px 4px rgb(0 0 0 / 50%);
  transform: scale(1.02);
  transition: all 0.3s ease;
}

.swipeCard.selected .swipeCardDescription {
  color: var(--text-primary, #f8fafc);
  text-shadow: 0 1px 2px rgb(0 0 0 / 30%);
}

.swipeCard.selected .swipeCardImage {
  box-shadow: 0 4px 15px rgb(90 92 255 / 8%);
  filter: brightness(1.05) contrast(1.05);
  transform: scale(1.02);
}

/* Enhanced Selected Card Content Background */
.swipeCard.selected .swipeCardContent {
  position: relative;
}

.swipeCard.selected .swipeCardContent::after {
  position: absolute;
  inset: -10px;
  z-index: -1;
  content: "";
  background: linear-gradient(
    45deg,
    rgb(90 92 255 / 2%),
    rgb(124 58 237 / 10%),
    rgb(90 92 255 / 2%)
  );
  border-radius: 25px;
  animation: borderGlow 2s ease-in-out infinite;
}

@keyframes borderGlow {
  0%,
  100% {
    opacity: 0.15;
  }

  50% {
    opacity: 0.3;
  }
}

/* Enhanced Metadata for Selected Cards */
.swipeCard.selected .metadataItem {
  background: linear-gradient(
    135deg,
    rgb(90 92 255 / 20%),
    rgb(124 58 237 / 20%)
  );
  border: 1px solid rgb(90 92 255 / 30%);
  box-shadow: 0 2px 8px rgb(90 92 255 / 20%);
  transform: scale(1.02);
}

/* Enhanced Selection Indicator Styling */
.selectionIndicator.selected {
  background: linear-gradient(135deg, var(--primary-color, #5a5cff), #7c3aed);
  box-shadow:
    0 4px 20px rgb(90 92 255 / 40%),
    0 0 0 2px rgb(255 255 255 / 10%);
  transform: scale(1.02);
  animation: selectionPulse 2s ease-in-out infinite;
}

@keyframes selectionPulse {
  0%,
  100% {
    box-shadow:
      0 4px 20px rgb(90 92 255 / 40%),
      0 0 0 2px rgb(255 255 255 / 10%);
  }

  50% {
    box-shadow:
      0 6px 30px rgb(90 92 255 / 60%),
      0 0 0 3px rgb(255 255 255 / 20%);
  }
}

/* Enhanced Selection Indicator with Icon */
.selectionIndicator.selected::before {
  display: inline-block;
  margin-right: 0.5rem;
  font-size: 1rem;
  content: "✓";
  animation: checkmarkBounce 0.6s ease-out;
}

@keyframes checkmarkBounce {
  0% {
    opacity: 0;
    transform: scale(0) rotate(-10deg);
  }

  50% {
    transform: scale(1.2) rotate(5deg);
  }

  100% {
    opacity: 1;
    transform: scale(1) rotate(0deg);
  }
}

/* Enhanced Card Animation */
.swipeCard {
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes cardSelect {
  0% {
    transform: translateY(0) scale(1);
  }

  50% {
    transform: translateY(-8px) scale(1.05);
  }

  100% {
    transform: translateY(-4px) scale(1.02);
  }
}
